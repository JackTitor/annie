
name: Build Annie

on:
  pull_request:
    branches:
      - "*"
  push:
    branches:
      - master
  workflow_dispatch:
    inputs:
      ref:
        description: "Code version"
        required: true
        type: string
        default: master
      cargo-profile:
        description: "Cargo profile"
        required: true
        type: choice
        default: release
        options:
          - release
          - release-no-lto
          - release-unoptimized
      compress-exe:
        description: "Compression"
        required: true
        type: choice
        default: none
        options:
          - none
          - upx

jobs:
  build:
    name: Build
    runs-on: windows-latest
    env:
      RUSTFLAGS: -C target-feature=+crt-static
    defaults:
      run:
        shell: bash
    strategy:
      fail-fast: false
      matrix:
        target:
          - x86_64-pc-windows-msvc
          - x86_64-pc-windows-gnu
    steps:
      - name: Parse inputs
        run: |
          echo "REF=${{ inputs.ref || github.ref }}" >> $GITHUB_ENV
          echo "CARGO_PROFILE=${{ inputs.cargo-profile || 'release' }}" >> $GITHUB_ENV
          echo "COMPRESS_EXE=${{ inputs.compress-exe || 'none' }}" >> $GITHUB_ENV

      - name: Install sccache
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          TAG=$(gh --repo mozilla/sccache release list | grep Latest | awk '{print $(NF - 1)}')
          gh --repo mozilla/sccache release download --pattern 'sccache-*-x86_64-pc-windows-msvc.zip' $TAG
          unzip sccache-*.zip
          mkdir -p ~/bin
          mv $(find -name sccache.exe) ~/bin/
          rm -rf sccache*
          echo "SCCACHE_DIR=$(cygpath --windows ~/.sccache)" >> $GITHUB_ENV
          echo "RUSTC_WRAPPER=sccache" >> $GITHUB_ENV
          echo "~/bin" >> $GITHUB_PATH

      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ env.REF }}

      - name: Set environment variables
        run: |
          echo "~/.cargo/bin" >> $GITHUB_PATH
          echo "SHA=$(git rev-parse ${{ env.REF }})" >> $GITHUB_ENV

      - name: Cache cargo registry, git trees, installed apps, and sccache
        uses: actions/cache@v3
        with:
          key: cargo-global-${{ matrix.target }}
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            ~/.cargo/.crates.toml
            ~/.cargo/.crates2.json
            ~/.cargo/bin/cargo-cache.exe
            ~/.sccache

      - name: Install Rust via rustup
        run: |
          curl https://win.rustup.rs/ --silent --output rustup-init.exe
          ./rustup-init.exe -y --default-host=x86_64-pc-windows-msvc --profile=minimal
          rm rustup-init.exe

      - name: Update stable toolchain
        run: |
          rustup update stable-${{ matrix.target }}

      - name: Get rust toolchain SHA
        run: |
          echo "RUST_SHA=$(rustc -Vv | grep commit-hash | awk '{print $2}')" >> $GITHUB_ENV

      - name: Cache cargo build folder
        uses: actions/cache@v3
        with:
          key: cargo-target-dir-${{ env.SHA }}-${{ matrix.target }}-${{ env.RUST_SHA }}
          path: target

      - name: Run a full build
        run: |
          cargo +stable-${{ matrix.target }} build --profile=${{ env.CARGO_PROFILE }}
          cp target/${{ env.CARGO_PROFILE }}/annie-am.exe ~/annie-am.exe

      - name: Compress executable
        if: ${{ env.COMPRESS_EXE == 'upx' }}
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          TAG=$(gh --repo upx/upx release list | grep Latest | awk '{print $(NF - 1)}')
          gh --repo upx/upx release download --pattern 'upx-*-win64.zip' $TAG
          unzip upx-*-win64.zip
          $(find -name upx.exe) $(cygpath --windows ~/annie-am.exe)
          rm -rf upx*

      - name: Get package semver
        run: |
          cat Cargo.toml | sed -rn 's/^\s*version\s*=\s*"(.*?)"/SEMVER=\1/p' >> $GITHUB_ENV

      - name: Upload annie executable
        uses: actions/upload-artifact@v3
        with:
          name: annie-${{ env.SEMVER }}-${{ matrix.target }}-${{ env.CARGO_PROFILE }}${{ env.COMPRESS_EXE != 'none' && '-compressed' || '' }}
          path: |
            ~/annie-am.exe
          retention-days: 7

      - name: Clear cargo cache
        run: |
          cargo install cargo-cache --no-default-features --features ci-autoclean
          cargo-cache
